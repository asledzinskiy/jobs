- job-template:
    name: 'mcp.system-test.custom'
    description: 'Run custom system test for "MCP" project'
    test-expression: 'none'
    conf-file-name: 'default.yaml'
    node: 'system-test'
    concurrent: true
    timeout: '360'
    weight: '1'
    envname: "$JOB_NAME.$BUILD_NUMBER"
    netchecker-agent-dir: "$WORKSPACE/mcp-netchecker-agent"
    netchecker-server-dir: "$WORKSPACE/mcp-netchecker-server"
    pre-script: |
        echo "SKIP"
    post-script: |
        source "$VENV_PATH/bin/activate"
        dos.py destroy "$ENV_NAME" || true
    logrotate:
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
      daysToKeep: 30
      numToKeep: 50

    parameters:
    - string:
        name: TEST_PATH
        default: ""
        description: "Path to the test module/class/function"
    - string:
        name: KEEP_BEFORE
        default: 'no'
        description: 'If yes/true, then DO NOT ERASE existing environment'
    - string:
        name: KEEP_AFTER
        default: 'no'
        description: 'If yes/true, then DO NOT ERASE existing environment'
    - string:
        name: NETCHECKER_SERVER_COMMIT
        default: 'master'
    - string:
        name: NETCHECKER_AGENT_COMMIT
        default: 'master'
    - string:
        name: REGISTRY
        default: "{docker-dev-virtual}"
        description: 'Registry with CCP component images'

    - systest-params:
        conf-file-name: '{conf-file-name}'
        docker-prod-virtual: '{docker-prod-virtual}'
        test-expression: '{test-expression}'
        mcp-branch: 'mcp'
        image_link: '{image_link}'
        image_path: '{image_path}'
        artifactory-url: '{artifactory-url}'
        mcp-k8s-ci-registry: '{mcp-k8s-ci-registry}'
    - calico-systest-params:
        docker-prod-virtual: '{docker-prod-virtual}'
        mcp-k8s-ci-registry: '{mcp-k8s-ci-registry}'

    properties:
      - heavy-job:
          weight: '{weight}'
      - throttle:
          max-per-node: 1
          option: project
      - authorization-allow-group:
          group_name: 'qa-eng'

    scm:
      - git:
          url: '{gerrit-url}/mcp/mcp-qa'
          branches:
           - "$MCP_QA_COMMIT"

      - git:
          url: 'https://github.com/openstack/fuel-ccp-installer'
          branches:
           - "$FUEL_CCP_INSTALLER_COMMIT"
          basedir: 'fuel-ccp-installer'

      - git:
           url: 'ssh://mcp-ci-gerrit@{gerrit-host}:29418/mcp-netchecker/mcp-netchecker-server'
           credentials-id: 'mcp-ci-gerrit'
           branches:
            - "$NETCHECKER_SERVER_COMMIT"
           basedir: 'mcp-netchecker-server'

      - git:
           url: 'ssh://mcp-ci-gerrit@{gerrit-host}:29418/mcp-netchecker/mcp-netchecker-agent'
           credentials-id: 'mcp-ci-gerrit'
           branches:
            - "$NETCHECKER_AGENT_COMMIT"
           basedir: 'mcp-netchecker-agent'

    wrappers:
    - credentials-binding:
      - username-password-separated:
          credential-id: 'artifactory'
          username: ARTIFACTORY_LOGIN
          password: ARTIFACTORY_PASSWORD
    - timeout:
        fail: false
        timeout: '{timeout}'
    - ansicolor:
        colormap: xterm

    builders:
      - inject:
          properties-content: |
            ENV_NAME={envname}
            NETCHECKER_AGENT_DIR={netchecker-agent-dir}
            NETCHECKER_SERVER_DIR={netchecker-server-dir}

      - shell: |
          #!/bin/bash -xe
          echo "=== [systest PRE-script] ==="
          {pre-script}
      - trigger-builds:
        - project: 'download-mcp-systest-image'
          current-parameters: true
          block: true
          same-node: true

      - run-systest

      - shell: |
          #!/bin/bash -xe
          echo "=== [systest POST-script] ==="
          {post-script}

    publishers:
    - post-destroy-vms # Destroy envs if left undestroyed
    - archive:
        allow-empty: true
        artifacts: '**/nosetests.xml,logs/*,tests.log,*.txt'
        latest-only: false
    - junit:
        keep-long-stdio: false
        results: '**/nosetests.xml'
