- job-template:
    name: calico-build-confd
    disabled: true
    description: |
      Build artifacts<br>
      This is simple job without storing artifacts, only for first stage of
      jobs implementation
    node: calico
    concurrent: true
    builders:
      - inject:
          properties-content: |
            ARTIFACTORY_URL={artifactory-url}/projectcalico
      - shell:
          !include-raw-escape: ../../builders/calico-build-confd.sh
      - shell:
          !include-raw-escape: ../../builders/calico-publish-artifact-for-patchset.sh
      - trigger-builds:
        - project: calico-build-calico-containers
          property-file: build.property
          predefined-parameters: |
            GERRIT_REFSPEC=refs/heads/mcp-0.1
            GERRIT_CHANGE_NUMBER=$GERRIT_CHANGE_NUMBER
            CONFD_URL=$ARTIFACTORY_URL/$GERRIT_CHANGE_NUMBER/confd/confd-$GIT_SHA
          block: true
    scm:
      - git:
         remotes:
           - gerrit:
               url: 'ssh://mcp-ci-gerrit@{gerrit-host}:29418/projectcalico/confd'
               refspec: '$GERRIT_REFSPEC'
               credentials-id: 'mcp-ci-gerrit'
         branches:
          - '$GERRIT_BRANCH'
         choosing-strategy: gerrit
         skip-tag: true
    wrappers:
      - credentials-binding:
          - username-password-separated:
              credential-id: 'artifactory'
              username: ARTIFACTORY_LOGIN
              password: ARTIFACTORY_PASSWORD
    triggers:
      - gerrit:
          trigger-on:
            - patchset-created-event
            - comment-added-contains-event:
                comment-contains-value: '(recheck|reverify)'
          projects:
            - project-compare-type: PLAIN
              project-pattern: projectcalico/confd
              branches:
                - branch-compare-type: PLAIN
                  branch-pattern: 'mcp-0.1'
          custom-url: '* $JOB_NAME $BUILD_URL'
    publishers:
      - post-tasks:
          - matches:
              - log-text: '.'
            escalate-status: true
            script: |
              sudo chown -R jenkins:jenkins "${{WORKSPACE}}"
